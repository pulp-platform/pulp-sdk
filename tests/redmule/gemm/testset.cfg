from plptest.testsuite import *
import re

def check_output(test, output, cycle_error_ref):
    log = ''

    match = re.search(r"Predicted cycles: (\d+)", output)
    if not match:
        return (False, "Cycle count not found in log string\n")
    cycle_count = int(match.group(1))

    match = re.search(r"DIFF:\s*([+-]?\d+)", output)
    if not match:
        return (False, "Diff count not found in log string\n")
    cycle_diff = abs(int(match.group(1)))
    cycle_error = cycle_diff / cycle_count * 100

    log += f'Found ref {cycle_count}, error {cycle_error}% vs {cycle_error_ref}%\n'

    if cycle_error > cycle_error_ref:
        return(False, f'Too high error rate: {cycle_error} vs {cycle_error_ref} expected\n')

    return (True, log)


# Called by plptest to declare the tests
def testset_build(testset):

    #
    # Test list decription
    #
    testset.new_make_test('gemm', flags='build_dir_ext=gemm', checker=lambda test, output: check_output(test, output, 1))
